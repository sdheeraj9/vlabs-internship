<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2016-06-13 Mon 10:22 -->
<meta  http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta  name="viewport" content="width=device-width, initial-scale=1" />
<title>Iterative System Example : Traffic signal manager</title>
<meta  name="generator" content="Org-mode" />
<meta  name="author" content="Dheeraj" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  pre.src-sh:before    { content: 'sh'; }
  pre.src-bash:before  { content: 'sh'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-R:before     { content: 'R'; }
  pre.src-perl:before  { content: 'Perl'; }
  pre.src-java:before  { content: 'Java'; }
  pre.src-sql:before   { content: 'SQL'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">Iterative System Example : Traffic signal manager</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgheadline1">1. Introduction</a></li>
<li><a href="#orgheadline10">2. Implementation</a>
<ul>
<li><a href="#orgheadline2">2.1. Initial Setup</a></li>
<li><a href="#orgheadline8">2.2. Variables</a>
<ul>
<li><a href="#orgheadline3">2.2.1. button<sub>start</sub></a></li>
<li><a href="#orgheadline4">2.2.2. count</a></li>
<li><a href="#orgheadline5">2.2.3. traffic<sub>interval</sub></a></li>
<li><a href="#orgheadline6">2.2.4. info<sub>1</sub>, info<sub>2</sub>, info<sub>3</sub></a></li>
<li><a href="#orgheadline7">2.2.5. road<sub>1</sub>, road<sub>2</sub>, road<sub>3</sub></a></li>
</ul>
</li>
<li><a href="#orgheadline9">2.3. Functions</a></li>
</ul>
</li>
</ul>
</div>
</div>


<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1"><span class="section-number-2">1</span> Introduction</h2>
<div class="outline-text-2" id="text-1">
<p>
This application built using javascript and p5 framework uses iterative loops
to make a traffic signal manager for a Y-junction ie; an intersection of three
roads. Each of these roads are single lane roads thereby making it unfeasible
to give a free left to the roads. This increases the need for an optimized code
giving access to all roads with minimum waiting period at the signal.
</p>
</div>
</div>
<div id="outline-container-orgheadline10" class="outline-2">
<h2 id="orgheadline10"><span class="section-number-2">2</span> Implementation</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-orgheadline2" class="outline-3">
<h3 id="orgheadline2"><span class="section-number-3">2.1</span> Initial Setup</h3>
<div class="outline-text-3" id="text-2-1">
<p>
The setup function creates a canvas of the entire page size.
info<sub>1</sub>, info<sub>2</sub>, info<sub>3</sub>, road<sub>1</sub>, road<sub>2</sub>, road<sub>3</sub> display font on the web page. In
addition to this, the roads and the signals have been created using line and
ellipse commands. And a button named Start has been created.
</p>

<div class="org-src-container">

<pre class="src src-javascript">function setup() {

  // create canvas
  createCanvas(windowWidth, windowHeight);

 count = 0;

info_1 = createElement('h7', 'S1');
info_1.position(590,550);

info_2 = createElement('h7', 'S2');
info_2.position(640,550);

info_3 = createElement('h7', 'S3');
info_3.position(690,550);

road_1 = createElement('h7', 'ROAD 1');
road_1.position(120,270);

road_2 = createElement('h7', 'ROAD 2');
road_2.position(320,250);

road_3 = createElement('h7', 'ROAD 3');
road_3.position(320,370);

line(100,300,200,300);
line(100,310,200,310);
line(100,320,200,320);

line(250,250,320,180);
line(260,250,330,180);
line(270,250,340,180);

line(250,370,320,440);
line(260,370,330,440);
line(270,370,340,440);


 ellipse(600,600,20,20);
 ellipse(650,600,20,20);
 ellipse(700,600,20,20);

 ellipse(600,650,20,20);
 ellipse(650,650,20,20);
 ellipse(700,650,20,20);
 
 ellipse(600,700,20,20);
 ellipse(650,700,20,20);
 ellipse(700,700,20,20);

 button_start = createButton('Start');
 button_start.position(650,300);
  
 button_start.mouseClicked(traffic_start);
</pre>
</div>
</div>
</div>

<div id="outline-container-orgheadline8" class="outline-3">
<h3 id="orgheadline8"><span class="section-number-3">2.2</span> Variables</h3>
<div class="outline-text-3" id="text-2-2">
</div><div id="outline-container-orgheadline3" class="outline-4">
<h4 id="orgheadline3"><span class="section-number-4">2.2.1</span> button<sub>start</sub></h4>
<div class="outline-text-4" id="text-2-2-1">
<p>
This variable has been created to create a button, which can be clicked with
the mouse and the function traffic<sub>start</sub> can be called.
</p>
</div>
</div>

<div id="outline-container-orgheadline4" class="outline-4">
<h4 id="orgheadline4"><span class="section-number-4">2.2.2</span> count</h4>
<div class="outline-text-4" id="text-2-2-2">
<p>
This variable is an integer which has been initialized to 0. This variable is
used to iterate over the three different intervals of signals.
</p>
</div>
</div>

<div id="outline-container-orgheadline5" class="outline-4">
<h4 id="orgheadline5"><span class="section-number-4">2.2.3</span> traffic<sub>interval</sub></h4>
<div class="outline-text-4" id="text-2-2-3">
<p>
This variable sets an interval to iterate with a time delay, so that a specific
set of signals for the three roads stay for a while and then changes to the
next combination.
</p>
</div>
</div>

<div id="outline-container-orgheadline6" class="outline-4">
<h4 id="orgheadline6"><span class="section-number-4">2.2.4</span> info<sub>1</sub>, info<sub>2</sub>, info<sub>3</sub></h4>
<div class="outline-text-4" id="text-2-2-4">
<p>
These three variables have been created to display the words S1, S2, S3 on top
of the signals to indicate that each of the signal corresponds to that
particular road.
</p>
</div>
</div>

<div id="outline-container-orgheadline7" class="outline-4">
<h4 id="orgheadline7"><span class="section-number-4">2.2.5</span> road<sub>1</sub>, road<sub>2</sub>, road<sub>3</sub></h4>
<div class="outline-text-4" id="text-2-2-5">
<p>
These three variables have been created to display the name of the road next to
the corresponding road diagrams.
</p>
</div>
</div>
</div>


<div id="outline-container-orgheadline9" class="outline-3">
<h3 id="orgheadline9"><span class="section-number-3">2.3</span> Functions</h3>
<div class="outline-text-3" id="text-2-3">
<p>
Two functions viz, traffic<sub>start</sub> and traffic<sub>signals</sub> have been created to
facilitate the working of this application with ease.
The function traffic<sub>start</sub> sets an interval and iterates the loop of function
traffic<sub>signals</sub> with a time gap. The function traffic<sub>signals</sub> is called within
this function traffic<sub>start</sub>.
The function traffic<sub>signals</sub> uses the variable count and switches between the
three sub-cases continuously. Each of these sub cases have instructions to fill
out specific colors in the signals thereby indicating the access that has been
given to the vehicles on that specific road.
The red light refers to restriction for vehicles in either one or two
directions, while blue light refers to access to proceed in the rightward
direction and the green light refers to access to proceed in the leftward direction.
</p>
<div class="org-src-container">

<pre class="src src-javascript">function traffic_start()
{ 
 traffic_interval = setInterval(traffic_signals,10000);
 traffic_signals();
}

function traffic_signals()
{
if(count%3 == 0)
{

fill(0,200,0);
ellipse(600,650,20,20);
ellipse(700,650,20,20);

fill(0,0,200);
ellipse(600,700,20,20);

fill(200,0,0);
ellipse(650,600,20,20);                 
ellipse(700,600,20,20);

fill(0,0,0);
ellipse(600,600,20,20);
 
ellipse(650,650,20,20);
  
ellipse(650,700,20,20);

ellipse(700,700,20,20);  

count++;
}

else if(count%3 == 1)
{

fill(0,200,0);
ellipse(650,650,20,20);
ellipse(600,650,20,20);

fill(0,200,0);
ellipse(600,650,20,20);

fill(0,0,200);
ellipse(650,700,20,20);

fill(200,0,0);
 ellipse(600,600,20,20);
 ellipse(700,600,20,20);

fill(0,0,0);

ellipse(650,600,20,20); 
 
 ellipse(700,650,20,20);
 
 ellipse(600,700,20,20);
 
 ellipse(700,700,20,20); 

count++;
}

else if(count%3 == 2)
{

fill(0,0,200);
ellipse(700,700,20,20);

fill(0,200,0);
ellipse(650,650,20,20);

fill(200,0,0);

 ellipse(600,600,20,20);
 ellipse(650,600,20,20);
 ellipse(700,600,20,20);

fill(0,0,0);
 ellipse(600,650,20,20);
 
 ellipse(700,650,20,20);
 
 ellipse(600,700,20,20);
 ellipse(650,700,20,20);
 
count++;
}
}
</pre>
</div>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Author: Dheeraj</p>
<p class="date">Created: 2016-06-13 Mon 10:22</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
